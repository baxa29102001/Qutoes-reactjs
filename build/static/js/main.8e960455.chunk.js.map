{"version":3,"sources":["components/layout/MainNavigation.module.css","components/quotes/QuoteForm.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.module.css","components/UI/LoadingSpinner.module.css","components/quotes/NoQuotesFound.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/MainNavigation.js","components/layout/Layout.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","libs/api.js","hooks/use-http.js","components/UI/LoadingSpinner.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","pages/NotFound.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","App.js","index.js"],"names":["module","exports","MainNavigation","className","classes","header","logo","nav","to","activeClassName","active","Layout","props","main","children","QuoteItem","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isAscending","URLSearchParams","search","get","sortedQuotes","sort","a","b","sorting","onClick","push","list","map","quote","FIREBASE_DOMAIN","getAllQuotes","fetch","response","json","data","ok","Error","message","key","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","requestData","commentData","commentId","name","getAllComments","transformedComments","commentObj","httpReducer","state","action","type","status","error","payload","errorMessage","useHttp","requestFunction","startWithPending","useReducer","dispatch","sendRequest","useCallback","LoadingSpinner","spinner","NoQuotesFound","noquotes","AllQuotes","useEffect","length","Card","card","QuoteForm","useState","isEntered","setIsEntered","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NotFound","CommentItem","CommentsList","comments","comment","NewCommentForm","onAddedComment","commentTextRef","submitFormHandler","eneterdText","Comments","useParams","isAddingComment","setIsAddingComment","contentComment","reRender","HighlightedQuote","QuoteDetail","match","useRouteMatch","path","exact","url","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e960455.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__3eDV3\",\"logo\":\"MainNavigation_logo__2jUMk\",\"nav\":\"MainNavigation_nav__2q_bc\",\"active\":\"MainNavigation_active__1sp_E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__1phqY\",\"loading\":\"QuoteForm_loading__37BfW\",\"control\":\"QuoteForm_control__3ZU3U\",\"actions\":\"QuoteForm_actions__1JF9l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__3ccg7\",\"loading\":\"NewCommentForm_loading__3pLCv\",\"control\":\"NewCommentForm_control__1hRg4\",\"actions\":\"NewCommentForm_actions__1m3-e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__28ch_\",\"sorting\":\"QuoteList_sorting__fRIR_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__2RSrC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__1YK-U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__18WaD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3nbwd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m9-j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__3uVlT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__2USAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__1piU1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__26fUe\"};","import React, { Fragment } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport classes from './MainNavigation.module.css';\r\n\r\nfunction MainNavigation() {\r\n  return (\r\n    <Fragment>\r\n      <header className={classes.header}>\r\n        <div className={classes.logo}>Great Logo</div>\r\n        <nav className={classes.nav}>\r\n          <ul>\r\n            <li>\r\n              <NavLink to='/quotes' activeClassName={classes.active}>\r\n                All quotes{' '}\r\n              </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to='/new-quote' activeClassName={classes.active}>\r\n                Add quote{' '}\r\n              </NavLink>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default MainNavigation;\r\n","import React, { Fragment } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport MainNavigation from './MainNavigation';\r\n\r\nfunction Layout(props) {\r\n  return (\r\n    <Fragment>\r\n      <MainNavigation />\r\n      <main className={classes.main}>{props.children}</main>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortedFunc = (quotes, ascending) => {\n  return quotes.sort((a, b) => {\n    if (ascending) {\n      return a.id > b.id ? 1 : -1;\n    } else {\n      return a.id < b.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const params = new URLSearchParams(location.search);\n  const isAscending = params.get('sort') === 'asc';\n  const sortingHandler = () => {\n    history.push('/quotes?sort=' + (isAscending ? 'desc' : 'asc'));\n  };\n\n  const sortedQuotes = sortedFunc(props.quotes, isAscending);\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={sortingHandler}>\n          Sort {isAscending ? 'Descending' : 'Ascending'}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","const FIREBASE_DOMAIN = 'https://react-http-7cdea-default-rtdb.firebaseio.com/';\r\n\r\nexport async function getAllQuotes() {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quotes.');\r\n  }\r\n\r\n  const transformedQuotes = [];\r\n\r\n  for (const key in data) {\r\n    const quoteObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedQuotes.push(quoteObj);\r\n  }\r\n  return transformedQuotes;\r\n}\r\n\r\nexport async function getSingleQuote(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not fetch quote.');\r\n  }\r\n\r\n  const loadedQuote = {\r\n    id: quoteId,\r\n    ...data,\r\n  };\r\n\r\n  return loadedQuote;\r\n}\r\n\r\nexport async function addQuote(quoteData) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\r\n    method: 'POST',\r\n    body: JSON.stringify(quoteData),\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n  });\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not create quote.');\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nexport async function addComment(requestData) {\r\n  const response = await fetch(\r\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\r\n    {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestData.commentData),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    }\r\n  );\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not add comment.');\r\n  }\r\n\r\n  return { commentId: data.name };\r\n}\r\n\r\nexport async function getAllComments(quoteId) {\r\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\r\n\r\n  const data = await response.json();\r\n\r\n  if (!response.ok) {\r\n    throw new Error(data.message || 'Could not get comments.');\r\n  }\r\n\r\n  const transformedComments = [];\r\n\r\n  for (const key in data) {\r\n    const commentObj = {\r\n      id: key,\r\n      ...data[key],\r\n    };\r\n\r\n    transformedComments.push(commentObj);\r\n  }\r\n\r\n  return transformedComments;\r\n}\r\n","import { useReducer, useCallback } from 'react';\r\n\r\nfunction httpReducer(state, action) {\r\n  if (action.type === 'SEND') {\r\n    return {\r\n      status: 'pending',\r\n      data: null,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'SUCCESS') {\r\n    return {\r\n      status: 'completed',\r\n      data: action.payload,\r\n      error: null,\r\n    };\r\n  }\r\n\r\n  if (action.type === 'FAIL') {\r\n    return {\r\n      status: 'completed',\r\n      data: null,\r\n      error: action.errorMessage,\r\n    };\r\n  }\r\n\r\n  return state;\r\n}\r\n\r\nfunction useHttp(requestFunction, startWithPending = false) {\r\n  const [state, dispatch] = useReducer(httpReducer, {\r\n    status: startWithPending ? 'pending' : null,\r\n    data: null,\r\n    error: null,\r\n  });\r\n\r\n  const sendRequest = useCallback(\r\n    async (quote) => {\r\n      dispatch({ type: 'SEND' });\r\n      try {\r\n        let data = await requestFunction(quote);\r\n        dispatch({ type: 'SUCCESS', payload: data });\r\n      } catch (error) {\r\n        dispatch({ type: 'FAIL', errorMessage: error.message });\r\n      }\r\n    },\r\n    [requestFunction]\r\n  );\r\n\r\n  return {\r\n    sendRequest,\r\n    ...state,\r\n  };\r\n}\r\nexport default useHttp;\r\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link to={'/new-quote'} className='btn'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React, { useEffect } from 'react';\r\nimport QuoteList from '../components/quotes/QuoteList';\r\nimport { getAllQuotes } from '../libs/api';\r\nimport useHttp from '../hooks/use-http';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from '../components/quotes/NoQuotesFound';\r\n\r\nfunction AllQuotes() {\r\n  const { sendRequest, data, status, error } = useHttp(getAllQuotes, true);\r\n  useEffect(() => {\r\n    sendRequest();\r\n  }, [sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (error) {\r\n    return <p className='centered focused'>{error}</p>;\r\n  }\r\n  if (status === 'completed' && (!data || data.length === 0)) {\r\n    return <NoQuotesFound />;\r\n  }\r\n\r\n  return <QuoteList quotes={data} />;\r\n}\r\n\r\nexport default AllQuotes;\r\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from 'react';\nimport { Prompt } from 'react-router-dom';\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\n\nconst QuoteForm = (props) => {\n  const [isEntered, setIsEntered] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n  const clickHandler = () => {\n    setIsEntered(false);\n  };\n\n  const focusHandler = () => {\n    setIsEntered(true);\n  };\n\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntered}\n        message={(location) => 'If you leave page you lost data'}\n      />\n      <Card>\n        <form\n          onFocus={focusHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}>\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor='author'>Author</label>\n            <input type='text' id='author' ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor='text'>Text</label>\n            <textarea id='text' rows='5' ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={clickHandler} className='btn'>\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../libs/api';\r\n\r\nfunction NewQuote() {\r\n  const { sendRequest, status } = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (status === 'completed') {\r\n      history.push('/quotes');\r\n    }\r\n  }, [status, history]);\r\n\r\n  const addQuoteHandler = (item) => {\r\n    sendRequest(item);\r\n  };\r\n  return (\r\n    <QuoteForm isLoading={status === 'pending'} onAddQuote={addQuoteHandler} />\r\n  );\r\n}\r\n\r\nexport default NewQuote;\r\n","import React from 'react';\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className='centered'>\r\n      <p>Not found Page 404</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useRef, useEffect } from 'react';\nimport useHttp from '../../hooks/use-http';\nimport { addComment } from '../../libs/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const { status, sendRequest, error } = useHttp(addComment, false);\n  const { onAddedComment } = props;\n  useEffect(() => {\n    if (status === 'completed' && !error) {\n      onAddedComment();\n    }\n  }, [onAddedComment, status, error]);\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const eneterdText = commentTextRef.current.value;\n    // optional: Could validate here\n    // send comment to server\n    sendRequest({ commentData: { text: eneterdText }, quoteId: props.quoteId });\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === 'pending' ? (\n        <div className='centered'>\n          <LoadingSpinner />\n        </div>\n      ) : (\n        <>\n          <div className={classes.control} onSubmit={submitFormHandler}>\n            <label htmlFor='comment'>Your Comment</label>\n            <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button className='btn'>Add Comment</button>\n          </div>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState, useEffect, useCallback } from 'react';\nimport { useParams } from 'react-router-dom';\nimport useHttp from '../../hooks/use-http';\nimport { getAllComments } from '../../libs/api';\nimport LoadingSpinner from '../UI/LoadingSpinner';\n\nimport classes from './Comments.module.css';\nimport CommentsList from './CommentsList';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const params = useParams();\n\n  const { id } = params;\n  const {\n    sendRequest,\n    data: comments,\n    // error,\n    status,\n  } = useHttp(getAllComments);\n\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  useEffect(() => {\n    sendRequest(id);\n  }, [id, sendRequest]);\n\n  const reRender = useCallback(() => {\n    sendRequest(id);\n  }, [id, sendRequest]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  let contentComment;\n  if (status === 'pending') {\n    contentComment = (\n      <div className='centered'>\n        <LoadingSpinner />\n      </div>\n    );\n  }\n  if (status === 'completed' && (!comments || comments.length === 0)) {\n    contentComment = (\n      <div className='centered'>\n        <p>No comments</p>\n      </div>\n    );\n  }\n\n  if (status === 'completed' && comments.length > 0) {\n    contentComment = <CommentsList comments={comments} />;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm quoteId={id} onAddedComment={reRender} />\n      )}\n      {contentComment}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { useEffect } from 'react';\r\nimport { useParams, Route, Link, useRouteMatch } from 'react-router-dom';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport LoadingSpinner from '../components/UI/LoadingSpinner';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../libs/api';\r\nimport NotFound from './NotFound';\r\n\r\nfunction QuoteDetail() {\r\n  const {\r\n    sendRequest,\r\n    data: quote,\r\n    status,\r\n    error,\r\n  } = useHttp(getSingleQuote, true);\r\n  const match = useRouteMatch();\r\n\r\n  const params = useParams();\r\n  const { id } = params;\r\n\r\n  useEffect(() => {\r\n    sendRequest(id);\r\n  }, [id, sendRequest]);\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div className='centered'>\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  }\r\n  if (!quote || error) {\r\n    return <NotFound />;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <HighlightedQuote text={quote.text} author={quote.author} />\r\n      <Route path={match.path} exact>\r\n        <div className='centered'>\r\n          <Link className='btn--flat' to={`${match.url}/comment`}>\r\n            Load Comments\r\n          </Link>\r\n        </div>\r\n      </Route>\r\n\r\n      <Route path={`${match.path}/comment`} component={Comments} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default QuoteDetail;\r\n","import { Redirect, Route, Switch } from 'react-router-dom';\nimport Layout from './components/layout/Layout';\nimport AllQuotes from './pages/AllQuotes';\nimport NewQuote from './pages/NewQuote';\nimport NotFound from './pages/NotFound';\nimport QuoteDetail from './pages/QuoteDetail';\nfunction App() {\n  return (\n    <div>\n      <Layout>\n        <Switch>\n          <Route path='/' exact>\n            <Redirect to='/quotes' />\n          </Route>\n          <Route path='/quotes' exact>\n            <AllQuotes />\n          </Route>\n\n          <Route path='/quotes/:id'>\n            <QuoteDetail />\n          </Route>\n\n          <Route path='/new-quote'>\n            <NewQuote />\n          </Route>\n          <Route path='*'>\n            <NotFound />\n          </Route>\n        </Switch>\n      </Layout>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}